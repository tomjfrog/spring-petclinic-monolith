template: true
valuesFilePath: ./values.yml

resources:
  - name: git_repository
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitProvider }}
      path: {{ .Values.repoPath }}
      buildOn:
        commit: true
      branches:
        include: 'main'
      tags:
        include: '-rc-\d*'
      cancelPendingRunsOn:
        newCommit: true
  - name: docker_image
    type: Image
    configuration:
      registry: {{ .Values.dockerRegistry }}
      sourceRepository: {{ .Values.dockerRepo }}
      imageName: tomjfrog.jfrog.io/{{ .Values.dockerRepo }}/{{ .Values.imageName }}
      imageTag: ${run_number}

pipelines:
  - name: petclinic_monolith_pipeline
    configuration:
      affinityGroup: default
    steps:
      - name: mvn_build_step
        type: MvnBuild
        configuration:
          mvnCommand: "clean package"
          resolverSnapshotRepo: {{ .Values.deployerRepo }}
          resolverReleaseRepo: {{ .Values.deployerRepo }}
          deployerSnapshotRepo: {{ .Values.deployerRepo }}
          deployerReleaseRepo: {{ .Values.deployerRepo }}
          integrations:
            - name: {{ .Values.artifactory }}
          inputResources:
            - name: git_repository
        execution:
          onStart:
            - echo "Starting the Maven build step"
          onSuccess:
            - echo "Maven build step succeeded"
          onFailure:
            - echo "Maven build step failed"
          onComplete:
            - echo "Maven build step completed"
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: default
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: tomjfrog.jfrog.io/{{ .Values.dockerRepo }}/{{ .Values.imageName }}
          dockerImageTag: ${run_number}
          dockerOptions: --build-arg JF_TOKEN=${JF_TOKEN}
          inputResources:
              - name: git_repository
          inputSteps:
            - name: mvn_build_step
          integrations:
            - name: {{ .Values.artifactory }}
            - name: docker_registry
          environmentVariables:
            JF_TOKEN: '${access_token}'
      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: default
          targetRepository: {{ .Values.dockerRepo }}
          inputSteps:
            - name: docker_build
          integrations:
            - name: {{ .Values.artifactory }}
          outputResources:
            - name: docker_image
      - name: publish_build
        type: PublishBuildInfo
        configuration:
          forceXrayScan: false
          inputSteps:
            - name: docker_push
          outputResources:
            - name: mvn_build_info
  - name: promote_to_stage_on_tag_create
    steps:
      - name: check_tag_event
        type: Bash
        configuration:
          inputResources:
            - name: git_repository
          integrations:
            - name: {{ .Values.gitProvider }}
          environmentVariables:
            GITHUB_REF: '${res_source_repo[0].commit.ref'
        execution:
          onStart:
            - |
              if [[ $GITHUB_REF == refs/tags/* ]]; then
                echo "Tag created"
                exit 0
              else
                echo "Not a tag"
                exit 1
              fi
